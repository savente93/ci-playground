[build-system]
requires = ["flit_core >=3.4.0,<4"]
build-backend = "flit_core.buildapi"


[project]
name = "hydromt"
version = '0.0.1'
authors = [{ name = "Sam Vente", email = "savente93@gmail.com" }]
description = "used to test ci applications. do not use."
# dependencies coppied from HydroMT for realistic test case. not actually used for anything
dependencies = [
  "pandas", # Dataframes
  # "pyflwdir>=0.5.4",   # Hight models and derivatives
  # "pyproj",            # projections for Coordinate reference systems
  # "rasterio",          # raster wrapper around gdal
  # "shapely>=2.0.0",    # geometry transforms
  # "scipy",             # scientific utilities
  # "tomli",             # parsing toml files
  # "tomli-w",           # writing toml files
  # "xarray",            # ndim data
  # "universal_pathlib", # provides path compatability between different filesystems
  # "xmltodict",         # xml parser also used to read VRT
  # "zarr",              # zarr
]

requires-python = ">=3.9"

[project.optional-dependencies]
io = [
  "gcsfs", # google cloud file system
  # "openpyxl", # excel IO
  # "pillow",   # image IO
  # "requests", # donwload stuff
  # "s3fs",     # S3 file system
]
extra = [
  # "xugrid", # xarray wrapper for mesh processing
  # "pyet",   # calc evapotraspiration, quite well used, used in all wflow models but domain specific
  "polars",
  "scipy",
]
dev = [
  "black",       # linting
  "ruff",        # linting
  "pre-commit",  # linting
  "pip>=23.1.2", # needed for recursive dependencies
  "flit",        # needed to publish to pypi
  "twine",       # needed to publish to pypi
]
test = [
  "pytest>=2.7.3",  # testing framework
  "pytest-cov",     # test coverage
  "pytest-mock",    # mocking
  "pytest-timeout", # darn hanging tests
  # "xugrid",
]
doc = [
  "nbsphinx",                     # build notebooks in docs
  "pydata-sphinx-theme",          # theme
  "sphinx",                       # build docks
  "sphinx_design",                # doc layout
  "sphinx_autosummary_accessors", # doc layout
  "hydromt[examples,extra]",      # examples are included in the docs
]
examples = [
  "jupyterlab",      # run examples in jupyter notebook
  "cartopy",         # plotting examples
  "matplotlib-base", # plotting
  "notebook",        # jupyter integration
]

full = ["playground[io,extra,dev,test,doc,examples]"]
slim = ["playground[io,extra,examples]"]

[tool.make_env]
channels = ["conda-forge"]
deps_not_in_conda = ["sphinx_autosummary_accessors", "sphinx_design", "pyet"]

[tool.black]
line-length = 88
target-version = ['py39']

[tool.ruff]
line-length = 88

# enable pydocstyle (E), pyflake (F) and isort (I), pytest-style (PT), bugbear (B)
select = ["E", "F", "I", "PT", "D", "B"]
ignore-init-module-imports = true
ignore = ["D211", "D213", "E741", "D105", "E712", "B904"]
exclude = ["docs"]

[tool.ruff.per-file-ignores]
"tests/**" = ["D103", "D100", "D104"]
"hydromt/__init__.py" = ["E402", "F401", "F403"]
"hydromt/workflows/__init__.py" = ["F403"]
"hydromt/stats/__init__.py" = ["F403"]
"hydromt/models/__init__.py" = ["F403", "F401", "F405"]
"hydromt/_compat.py" = ["F401"]
"tests/conftest.py" = ["E402"]

[tool.ruff.pydocstyle]
convention = "numpy"

[tool.flit.sdist]
include = ["playground"]
exclude = ["docs", "examples", "envs", "tests", "binder", ".github"]

[tool.pytest.ini_options]
#addopts = "--ff --timeout=120 "
# no timeouts in playground pls
testpaths = ["tests"]
