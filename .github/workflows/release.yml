name: Create a new release

on:
  workflow_dispatch:
    inputs:
      latest_release:
        type: boolean
        default: false
        description: "Label this release as `latest`?"
      bump:
        type: choice
        options:
          - patch
          - minor
          - major
        default: minor
        description: "Is this a Major, Minor, or Patch release?"
      target:
        type: choice
        description: "What branch should we merge to after the release?"
        default: main
        options:
          - main
          - v1
          - release/v1-alpha

jobs:
  build:
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        # python-version: ['3.10','3.11']
        python-version: ['3.10']
        include:
          - os: windows-latest
            mamba-path: C:\\Users\\runneradmin\\miniconda3\\condabin\\mamba
            miniconda-path: C:\Users\runneradmin\miniconda3
            pycache-path: C:\Users\runneradmin\pycache
          - os: ubuntu-latest
            miniconda-path: ~/miniconda3
            mamba-path: ~/miniconda3/condabin/mamba
            pycache-path: ~/pycache
    name: py ${{ matrix.python-version }} (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    concurrency:
      group: ${{ github.workflow }}${{ matrix.os }}-${{ matrix.python-version }}-${{ github.ref }}
      cancel-in-progress: true
    steps:

      - uses: actions/checkout@v4

      # we need environment.yml to see if we have a cache hit
      - name: Generate env spec
        run: pip install tomli && python make_env.py test,io,extra -p ${{ matrix.python-version}} -n hydromt

      - name: load from cache
        id: cache
        uses: actions/cache/restore@v4
        with:
          path: |
            ${{ matrix.miniconda-path }}
            ${{ matrix.pycache-path }}
          # the below two settings mean we'll always restore the cache
          # but the cache hit output can tell us if we have to update afterwards
          key: test-${{ matrix.os }}-py${{ matrix.python-version }}-${{ hashFiles('environment.yml')  }}
          restore-keys: |
            test-${{ matrix.os }}-py${{ matrix.python-version }}
            test-${{ matrix.os }}

      - name: Fail on no cache restore
        if: steps.cache.outputs.cache-matched-key == ''
        run: |
          echo "Failed to restore any cache. exiting..."
          exit 1

      # by avoiding the mamba setup stage by loading it from cache instead we save
      # a lot of setup time, but we do have to do our own PATH management
      # hence the exports
      - name: Update environment
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          ${{ matrix.miniconda-path }} env update -n hydromt -f environment.yml

      - name: Test
        run: |
          ${{ matrix.mamba-path }} run -n hydromt python -m pytest --verbose --cov=hydromt --cov-report xml

      - name: Setup tmate session
        if: ${{ failure() }}
        uses: mxschmitt/action-tmate@v3
