
name: Create release artifacts
on:
  workflow_dispatch:
  push:
    branches: ["release/*"]
  pull_request:
    branches: ["release/*"]

jobs:
  pypi:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v4
        name: Install Python
        with:
          python-version: '3.10'

      - name: generate env
        run: |
          pip install tomli flit twine

      - name: Build artifacts
        run: |
          flit build
          python -m twine check dist/*"

      - uses: actions/upload-artifact@v3
        with:
          name: releases
          path: dist
  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: prefix-dev/setup-pixi@v0.6.0
        with:
          pixi-version: "v0.21.1"
          environments: full-py311

      - name: Generate docs
        run: |
          pixi run --locked -e full-py311 html

      - uses: actions/upload-artifact@v3
        with:
          name: release-docs
          path: docs/_build
  # docker:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 0

  #     - uses: actions/setup-python@v4
  #       name: Install Python
  #       with:
  #         python-version: '3.10'

  #     - name: generate env
  #       run: |
  #         pip install tomli flit twine

  #     - name: Build artifacts
  #       run: |
  #         flit build
  #         python -m twine check dist/*"

  #     - uses: actions/upload-artifact@v3
  #       with:
  #         name: releases
  #         path: dist
  # pixi:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 0

  #     - uses: actions/setup-python@v4
  #       name: Install Python
  #       with:
  #         python-version: '3.10'

  #     - name: generate env
  #       run: |
  #         pip install tomli flit twine

  #     - name: Build artifacts
  #       run: |
  #         flit build
  #         python -m twine check dist/*"

  #     - uses: actions/upload-artifact@v3
  #       with:
  #         name: releases
  #         path: dist
  # conda:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 0

  #     - uses: actions/setup-python@v4
  #       name: Install Python
  #       with:
  #         python-version: '3.10'

  #     - name: generate env
  #       run: |
  #         pip install tomli flit twine

  #     - name: Build artifacts
  #       run: |
  #         flit build
  #         python -m twine check dist/*"

  #     - uses: actions/upload-artifact@v3
  #       with:
  #         name: releases
  #         path: dist
  # binder:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 0

  #     - uses: actions/setup-python@v4
  #       name: Install Python
  #       with:
  #         python-version: '3.10'

  #     - name: generate env
  #       run: |
  #         pip install tomli flit twine

  #     - name: Build artifacts
  #       run: |
  #         flit build
  #         python -m twine check dist/*"

  #     - uses: actions/upload-artifact@v3
  #       with:
  #         name: releases
  #         path: dist

    
  
