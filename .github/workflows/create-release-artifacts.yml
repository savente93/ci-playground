
name: Create release artifacts
on:
  workflow_dispatch:
  push:
    branches: ["release/*"]
  pull_request:
    branches: ["release/*"]

jobs:
  # pypi:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0

  #     - uses: actions/setup-python@v5
  #       name: Install Python
  #       with:
  #         python-version: '3.11'

  #     - name: generate env
  #       run: |
  #         pip install tomli flit twine

  #     - name: Build artifacts
  #       run: |
  #         git clean -xdf 
  #         git restore -SW . 
  #         flit build 
  #         python -m twine check dist/*

  #     - uses: actions/upload-artifact@v4
  #       with:
  #         name: pypi-release-artifacts
  #         path: dist
  # docs:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0
  #     - uses: prefix-dev/setup-pixi@v0.6.0
  #       with:
  #         pixi-version: "v0.21.1"
  #         environments: full-py311

  #     - name: Generate docs
  #       run: |
  #         pixi run --locked -e full-py311 html

  #     - uses: actions/upload-artifact@v4
  #       id: upload-release-docs
  #       with:
  #         name: docs-release-artifacts
  #         path: docs/_build

  #     - name: Extract branch name
  #       shell: bash
  #       run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
  #       id: extract_branch


  #     - name: Add comment to PR
  #       run: |
  #         gh pr comment ${{ steps.extract_branch.outputs.branch }} --body "You can download the latest release docs here for inspection: ${{ steps.upload-release-docs.outputs.artifact-url }}"
  #       env:
  #         GH_TOKEN: ${{ github.token }}
          
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build and export
        uses: docker/build-push-action@v6
        with:
          outputs: type=docker,dest=/tmp/hydromt-docker-image.tar
          tags: hydromt

      - name: Run Tests
        run: docker run --env NUMBA_DISABLE_JIT=1 --rm hydromt 

      - name: Test Binder integration with repo2docker
        run: |
          pip install jupyter-repo2docker
          repo2docker . echo 'success!'
          

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: hydromt-docker-image
          path: /tmp/hydromt-docker-image.tar
    
  
  # pixi:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 0

  #     - uses: actions/setup-python@v4
  #       name: Install Python
  #       with:
  #         python-version: '3.10'

  #     - name: generate env
  #       run: |
  #         pip install tomli flit twine

  #     - name: Build artifacts
  #       run: |
  #         flit build
  #         python -m twine check dist/*"

  #     - uses: actions/upload-artifact@v3
  #       with:
  #         name: releases
  #         path: dist
